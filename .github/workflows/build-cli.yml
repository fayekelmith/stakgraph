name: Build CLI

on:
  push:
    tags:
      - "v*"

jobs:
  build-cli:
    runs-on: ${{ matrix.build-on }}
    strategy:
      matrix:
        include:
          # Linux
          - target: x86_64-unknown-linux-gnu
            archive: tar.gz
            build-on: ubuntu-latest
            use-cross: true
          - target: aarch64-unknown-linux-gnu
            archive: tar.gz
            build-on: ubuntu-latest
            use-cross: true
          # macOS
          - target: x86_64-apple-darwin
            archive: tar.gz
            build-on: macos-13
            use-cross: false
          - target: aarch64-apple-darwin
            archive: tar.gz
            build-on: macos-latest
            use-cross: false
          # Windows
          - target: x86_64-pc-windows-gnu
            archive: zip
            build-on: ubuntu-latest
            use-cross: true

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install cross
        if: matrix.use-cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build (native)
        if: ${{ !matrix.use-cross }}
        env:
          OPENSSL_STATIC: "1"
          OPENSSL_NO_PKG_CONFIG: "1"
          OPENSSL_VENDORED: "1"
        run: cargo build --release --target ${{ matrix.target }} --bin stakgraph --features vendored-openssl

      - name: Build with cross
        if: matrix.use-cross
        env:
          OPENSSL_STATIC: "1"
          OPENSSL_NO_PKG_CONFIG: "1"
        run: |
          echo "Building for target: ${{ matrix.target }}"
          cross build --release --target ${{ matrix.target }} --bin stakgraph --features vendored-openssl -vv

      - name: Package (Unix)
        if: matrix.archive == 'tar.gz'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf stakgraph-${{ matrix.target }}.tar.gz stakgraph

      - name: Package (Windows)
        if: matrix.archive == 'zip'
        run: |
          cd target/${{ matrix.target }}/release
          zip stakgraph-${{ matrix.target }}.zip stakgraph.exe

      - uses: actions/upload-artifact@v4
        with:
          name: stakgraph-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/stakgraph-${{ matrix.target }}.${{ matrix.archive }}

  release:
    needs: build-cli
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4

      - uses: softprops/action-gh-release@v1
        with:
          files: stakgraph-*/stakgraph-*.*
